How to install liquid
======================





Prerequisites
-------------

Of course the rrdtool must be installed on the linux-systems, along with bc and tr which are needed by the shell-scripts

sudo apt-get install rrdtool tr bc cu lightppd


Instead of lightppd you may also choose apache2.


Optional you can do a 

sudo apt-get install nfs-common ftp

for accessing logging data by nfs and if you want to push diagrams to an external webpage by ftp





Streaming the sample data into a logfile
----------------------------------------


For the purpose of datalogging it is necessary, to capture or stream the data to a file. This can be done under linux in different ways, for example by a little terminal function, which is standard part of python and therefore available in the standard-installation of most linuxes. It can be started in a unix-shell by the command:

python -m serial.tools.miniterm -p /dev/ttyUSB0 -b 9600 -q > mysampledatafile.log

whereas you should be in the working directory of your sampledata-visualization-application or respectively your rrdtool database. Afterwards, leave the shell-window open and open a new one for continuing. (The minitertm can later be stopped by closing the first window or by the key-combination STRG+ALT_Gr+])




Download Liquid from GitHub and install it into your local users home
---------------------------------------------------------------------

You need one or more special rrdtool database-files for the sample-data, which must be created freshly on each new installation to fullfill the demands of the individual hardware architecture (e.G. ARM, 32bit on a RaspberryPi).

To support the creation and the use of the database-file, we have prepared a package with three little shell-scripts which use an example-configuration with datastreams from a LibreSolar BMS with 10s-configuration (meaning: the batterypack consists of 10s cells). This can be customized for your special needs.


Go into your home with:

cd ~


and clone the liquid repository from github with:

git clone https://github.com/case06/liquid


This should result in creating within your home a directory for all your liquid monitors. It contains a subdirectory named "bms_10s", which is the working-directory for the given monitoring-application example.


Go inside, it should look similar like this:

total 151888
-rw-r--r-- 1 pi pi         0 Feb  5 16:37 bms_10s.log
-rwxr-xr-x 1 pi pi       913 Jan 30 20:41 createdb_bms_10s.sh*
-rwxr-xr-x 1 pi pi      6370 Jan 30 22:24 erzeugepng_bms_10s.sh*
-rwxr-xr-x 1 pi pi      3572 Jan 30 21:11 get_ftdi_bms_10s.sh*
-rwxr-xr-x 1 pi pi       725 Jan 30 22:58 myupload.sh*
drwxr-xr-x 2 pi pi      4096 Jan 30 21:27 rrdtool/
-rw-r--r-- 1 pi pi         0 Feb  5 15:03 test.log


If you are not on a RaspberryPi and using the default useraccount "pi", you have to go with an editor into each of the script-files named createdb_bms_10s.sh, get_ftdi_bms_10s.sh and erzeugepng_bms_10s.sh and there manually change the line

MYHOME=/home/pi/liquid/bms_10s/

Replace the word "pi" with the real name of your linux-home-directory, eg.

MYHOME=/home/oliver/liquid/bms_10s




Create the Ringbuffer-Database
------------------------------

Now you have to create the database-file, by starting a shellscript with the command:

./createdb_bms_10s.sh

Afterwards, there will be a file named "bms.rrd" created within the subdirectory "rrdtool" and now the ringbuffer-database is ready for storing the logging-data of a Libresolar BMS in 10s configuration.




Feed the Database with sensory sample-data
------------------------------------------

Thats the responsibility of the "get_ftdi_bms_10s.sh"-script, which retrieves the incoming data line by line from the above mentioned file bms_10s.log, parsing each line to cut out the single values and put them as an entry into the ringbufferdatabase:

./get_ftdi_bms_10s.sh




Generate the diagrams
---------------------

Next, the script "erzeugepng_bms_10s.sh" generates the diagramms as graphical .png-files, according to the recent data in the rrdtool-DataBase:

./erzeugepng_bms_10s.sh




Configuring /etc/crontab for continuos data-sampling
---------------------------------------------------

The scripts should be called in an continuing-loop by starting these two scripts periodically (and automatically) from the /etc/crontab, by appending the following lines to the crontab:


### Datalogging BMS_10s
*/1 *   * * *   root    /home/pi/liquid/bms_10s/get_ftdi_bms_10s.sh > /dev/null 2>&1
*/2 *   * * *   root    /home/pi/liquid/bms_10s/erzeugepng_bms_10s.sh > /dev/null 2>&1
### Upload BMS10s-diagramms to makeable-server
#*/4 *   * * *   root    /home/pi/liquid/bms_10s/myupload.sh > /dev/null 2>&1






This entry means, that each 1 minute the data will be retrieved from the logfile and written into the DataBase. Each 4 minutes a new diagramm will be produced, or, more precise, the diagramm .png-file will become updated (= overwritten).







Displaying the logging-diagramms on the LAN or the Internet
-----------------------------------------------------------


On the linux-system there must be also running a little webserver, like apache, or it can also be another, smaller one. Usually the default-settings of a webserver point towards the directory /var/www, which means, here must be placed, which should become visible from each workstation (meaning: can be accessed by eacht webbrowser) at he local network as a web-page containing the diagrams. If your browse from your own PC, then there even must be no webserver-process running, because you can access the webpage located at your harddisk directly.

Since the pictures are physically located at your working-directory /home/your_name/myrrd/rrdtool, you must set an symbolic link on each, at /var/www, by a command like:

ln -s /home/your_name/myrrd/rrdtool/temp4h.png temp4h.png

Repeat that for the other pictures also.

If you check that with

ls -al /var/www/myrrd/

then you must see something similar like


total 12
drwxr-xr-x 2 root root 4096 Mar  5  2014 .
drwxr-xr-x 4 root root 4096 Mar  5  2014 ..
-rw-r--r-- 1 root root  441 Mar  5  2014 index.html
-rw-r--r-- 1 root root  441 Mar  5  2014 balancer.html
lrwxrwxrwx 1 root root   47 May 21  2013 temp36h.png -> /home/your_home/myrrd/rrdtool/temp36h.png
lrwxrwxrwx 1 root root   46 May 21  2013 temp4h.png -> /home/your_home/myrrd/rrdtool/temp4h.png



Accordingly, the file "index.html" should contain the following code (The file balancer.html looks similar. You can find both as template in the ~/myrrd/rrdtool directory.):



<html>
<meta http-equiv='refresh' content='60'/>
<head>
</head>
<body bgcolor="#000000" text="ffffff">
<br><br>
<img src="temp4h.png">
<br><br>
<img src="temp36h.png">
<br><br>
</body>
</html>






So the webpage will not only be shown once when called, but will be each 60 seconds automatically refreshed.

Yout can use the example-scripts, to customize everything to your special needs, like adding more sensors (meaning, more rrd-files), or additionally time-ranges / logging-periods, e.g. for weekly, monthly or even anually logging. Check the rrdtool-documentation for details.



